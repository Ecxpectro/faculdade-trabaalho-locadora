/*Apaga os relacionamentos*/
/*ALTER TABLE LABDATABASE.PEDIDOS DROP CONSTRAINT FORNECEDORES_PEDIDOS_FK;*/
ALTER TABLE LABDATABASE.MOVIE DROP CONSTRAINT FK_MOVIE_TYPE_MOVIE;
ALTER TABLE LABDATABASE.USER_MOVIE DROP CONSTRAINT FK_USER_USER_MOVIE;
ALTER TABLE LABDATABASE.USER_MOVIE DROP CONSTRAINT FK_MOVIE_USER_MOVIE;
/*Apaga as tabelas*/
/*DROP TABLE LABDATABASE.FORNECEDORES;*/
DROP TABLE LABDATABASE.USERS;
DROP TABLE LABDATABASE.MOVIE_TYPE;
DROP TABLE LABDATABASE.MOVIE;
DROP TABLE LABDATABASE.USER_MOVIE;
/*Apaga as sequences*/
/*DROP SEQUENCE LABDATABASE.PEDIDOS_CODIGO_PEDIDO_SEQ;*/
DROP SEQUENCE LABDATABASE.USER_ID_SEQ;
DROP SEQUENCE LABDATABASE.MOVIE_TYPE_ID_SEQ;
DROP SEQUENCE LABDATABASE.MOVIE_ID_SEQ;
/*Cria as tabelas*/
/*USERS*/
CREATE TABLE LABDATABASE.USERS(
USER_ID NUMBER NOT NULL,
USER_FULLNAME VARCHAR2(200) NOT NULL,
CPF VARCHAR2(20) NOT NULL,
PHONE VARCHAR2(12) NOT NULL,
USER_EMAIL VARCHAR2(200) NOT NULL,
CONSTRAINT USERS_PK PRIMARY KEY (USER_ID)
);

/*MOVIE_TYPE*/
CREATE TABLE LABDATABASE.MOVIE_TYPE(
MOVIE_TYPE_ID NUMBER NOT NULL,
MOVIE_TYPE_NAME VARCHAR2(100) NOT NULL,
CONSTRAINT PK_MOVIE_TYPE_ID PRIMARY KEY (MOVIE_TYPE_ID)
);

/*Movie*/

CREATE TABLE LABDATABASE.MOVIE (
    MOVIE_ID NUMBER NOT NULL,
    MOVIE_TYPE_ID NUMBER,
    MOVIE_NAME VARCHAR2(50) NOT NULL,
    MOVIE_DESCRIPTION VARCHAR2(4000) NOT NULL,
    CURRENT_STOCK INT NOT NULL,
    MAXIMUM_STOCK INT NOT NULL,
    MOVIE_PRICE_PER_DAY DECIMAL NOT NULL,
    CONSTRAINT PK_MOVIE_ID PRIMARY KEY (MOVIE_ID),
    CONSTRAINT FK_MOVIE_TYPE_MOVIE
        FOREIGN KEY (MOVIE_TYPE_ID)
        REFERENCES MOVIE_TYPE(MOVIE_TYPE_ID)
);

/* USER_MOVIE*/

CREATE TABLE LABDATABASE.USER_MOVIE(
USER_MOVIE_ID NUMBER NOT NULL,
USER_ID NUMBER NOT NULL,
MOVIE_ID NUMBER NOT NULL,
RENTED_DATE DATE NOT NULL,
DELIVERY_DATE DATE NOT NULL,
RENTED_MOVIE_TOTAL_PRICE DECIMAL NOT NULL,
IS_ACTIVE BOOLEAN NOT NULL,
CONSTRAINT PK_USER_MOVIE_ID PRIMARY KEY (USER_MOVIE_ID),
CONSTRAINT FK_USER_USER_MOVIE
    FOREIGN KEY (USER_ID)
    REFERENCES USERS(USER_ID),
CONSTRAINT FK_MOVIE_USER_MOVIE
    FOREIGN KEY (MOVIE_ID)
    REFERENCES MOVIE(MOVIE_ID) 
);

/*Cria as sequences*/
/*CREATE SEQUENCE LABDATABASE.PEDIDOS_CODIGO_PEDIDO_SEQ;*/
CREATE SEQUENCE LABDATABASE.USER_ID_SEQ;
CREATE SEQUENCE LABDATABASE.MOVIE_TYPE_ID_SEQ;
CREATE SEQUENCE LABDATABASE.MOVIE_ID_SEQ;
CREATE SEQUENCE LABDATABASE.USER_MOVIE_ID_SEQ;
/*Cria os relacionamentos*/


/*Garante acesso total as tabelas*/
GRANT ALL ON LABDATABASE.USERS TO LABDATABASE;
GRANT ALL ON LABDATABASE.MOVIE_TYPE TO LABDATABASE;
GRANT ALL ON LABDATABASE.MOVIE TO LABDATABASE;
GRANT ALL ON LABDATABASE.USER_MOVIE TO LABDATABASE;

ALTER USER LABDATABASE quota unlimited on USERS;